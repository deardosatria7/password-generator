import Head from "next/head";
import Link from "next/link";
import {Inter} from "@next/font/google";

const inter = Inter({subsets: ["latin"]});

//define source letters
const lowercaseLetters = "qwertyuiopasdfghjklzxcvbnm";
const uppercaseLetters = "QWERTYUIOPASDFGHJKLZXCVBNM";
const symbols = "!@#$%^&*()_+-={}|[]:'.,?><|/";
const numbers = "0123456789";

//add a function to generate password
function generatePassword() {
  //check conditions applied
  const passwordLength = (document.getElementById("length") as HTMLInputElement)
    .valueAsNumber;
  const includeUppercase = (
    document.getElementById("uppercase") as HTMLInputElement
  ).checked;
  const includeLowercase = (
    document.getElementById("lowercase") as HTMLInputElement
  ).checked;
  const includeSymbols = (
    document.getElementById("symbols") as HTMLInputElement
  ).checked;

  //make an empty string to be appended later
  let password = "";
  //by default password contains only numbers
  let characterSet = numbers;

  //check numbers condition
  if (includeLowercase) {
    characterSet += lowercaseLetters;
  }

  //check uppercase letters condition
  if (includeUppercase) {
    characterSet += uppercaseLetters;
  }

  //check symbols condition
  if (includeSymbols) {
    characterSet += symbols;
  }

  //generate a random combination to match the length
  for (let i = 0; i < passwordLength; i++) {
    //generating random letters taken from characterSet
    const randomness = Math.floor(Math.random() * characterSet.length);
    //append the letters to string password
    password += characterSet[randomness];
  }

  //print out generated password
  (document.getElementById("generated-password") as HTMLInputElement).value =
    password;
}

export default function Home() {
  return (
    <>
      <Head>
        <title>Password generator</title>
        <style>{`
          html {
            font-family: ${inter.style.fontFamily};
          }
        `}</style>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <section className="min-h-screen">
        <div className="min-h-screen flex flex-col justify-center text-center">
          <div className="text-2xl sm:text-5xl p-10 font-semibold">
            Password Generator
          </div>
          <div>
            <form>
              <div className="grid grid-cols-2 gap-4 text-sm sm:text-base">
                <div className="flex justify-end text-sm sm:text-base">
                  <label htmlFor="uppercase">Uppercase Letters</label>
                </div>
                <div className="flex justify-start">
                  <input type="checkbox" id="uppercase" className="w-4 h-4" />
                </div>
                <div className="flex justify-end text-sm sm:text-base">
                  <label htmlFor="lowercase">Lowercase Letters</label>
                </div>
                <div className="flex justify-start">
                  <input type="checkbox" id="lowercase" className="w-4 h-4" />
                </div>

                <div className="flex justify-end text-sm sm:text-base">
                  <label htmlFor="symbols">Include Symbols</label>
                </div>
                <div className="flex justify-start">
                  <input type="checkbox" id="symbols" className="w-4 h-4" />
                </div>
                <div className="flex justify-end">
                  <label htmlFor="length">Password Length</label>
                </div>
                <div className="flex justify-start">
                  <input
                    className="rounded-sm text-black"
                    type="number"
                    id="length"
                    min="8"
                    max="64"
                  />
                </div>
                <div className="flex flex-col justify-center col-span-2">
                  <button
                    className="mt-6 py-2 bg-neutral-600 rounded-md mx-auto px-3 hover:bg-neutral-500"
                    type="button"
                    onClick={generatePassword}
                  >
                    Generate Password
                  </button>
                  <div className="flex justify-center mt-5 mx-6 sm:mx-44 gap-4">
                    <textarea
                      id="generated-password"
                      className="text-center bg-zinc-700 rounded-lg w-auto"
                      readOnly
                    ></textarea>
                    <Link
                      href={"/"}
                      className="flex bg-neutral-600 hover:bg-neutral-500 rounded-md px-3 items-center"
                      onClick={() => {
                        navigator.clipboard.writeText(
                          (
                            document.getElementById(
                              "generated-password"
                            ) as HTMLInputElement
                          ).value
                        );
                      }}
                    >
                      Copy
                    </Link>
                  </div>
                </div>
              </div>
            </form>
            <div className="text-gray-400 p-10">
              <i>Showing only numbers for default</i>
            </div>
          </div>
        </div>
      </section>
    </>
  );
}
